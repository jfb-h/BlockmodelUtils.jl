var documenterSearchIndex = {"docs":
[{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [Blockmodels]","category":"page"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"CurrentModule = Blockmodels","category":"page"},{"location":"#Blockmodels","page":"Blockmodels","title":"Blockmodels","text":"","category":"section"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"Documentation for the Blockmodels.jl Julia package to represent, analyse, and plot network blockmodels, i.e., blocked graph adjacency matrices according to some node partition. As of now, this package does not contain functionality to infer node partitions from network structure (i.e., clusters or equivalence-based partitions). Its main purpose is instead to provide a simple representation of blockmodels and some plotting utilities.","category":"page"},{"location":"#Installation","page":"Blockmodels","title":"Installation","text":"","category":"section"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"To install this package, enter the package manager at the REPL by pressing ] and write add Blockmodels.","category":"page"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"Plotting utilities are provided by a package extension using the Makie.jl ecosystem, so to use them you will also have to install one of the Makie backends, e.g. CairoMakie.","category":"page"},{"location":"#Getting-started","page":"Blockmodels","title":"Getting started","text":"","category":"section"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"For a graph g and a vector of group labels groups, create a blockmodel with the blockmodel function:","category":"page"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"using Graphs, Blockmodels\n\n# create a random graph and node partition\nn = 20\ng = erdos_renyi(n, 0.1)\ngroups = rand('a':'d', n)\n\n# create the blockmodel\nbm = blockmodel(g, groups)","category":"page"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"The resulting Blockmodel prints the blockdensity matrix:","category":"page"},{"location":"","page":"Blockmodels","title":"Blockmodels","text":"Blockmodel{Int64, SimpleGraph{Int64}}\n4 groups with sizes [6, 7, 4, 3]\n┌───┬───────┬───────┬───────┬───────┐\n│   │     1 │     2 │     3 │     4 │\n├───┼───────┼───────┼───────┼───────┤\n│ a │ 0.200 │ 0.214 │ 0.250 │ 0.278 │\n├───┼───────┼───────┼───────┼───────┤\n│ b │ 0.214 │ 0.095 │ 0.179 │ 0.286 │\n├───┼───────┼───────┼───────┼───────┤\n│ c │ 0.250 │ 0.179 │ 0.167 │ 0.083 │\n├───┼───────┼───────┼───────┼───────┤\n│ d │ 0.278 │ 0.286 │ 0.083 │ 0.000 │\n└───┴───────┴───────┴───────┴───────┘","category":"page"}]
}
